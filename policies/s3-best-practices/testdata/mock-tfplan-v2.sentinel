terraform_version = "1.5.2"

planned_values = {
	"outputs": {},
	"resources": {
		"aws_kms_key.objects": {
			"address":        "aws_kms_key.objects",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "objects",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_kms_key",
			"values": {
				"bypass_policy_lockout_safety_check": false,
				"custom_key_store_id":                null,
				"customer_master_key_spec":           "SYMMETRIC_DEFAULT",
				"deletion_window_in_days":            7,
				"description":                        "KMS key is used to encrypt bucket objects",
				"enable_key_rotation":                false,
				"is_enabled":                         true,
				"key_usage":                          "ENCRYPT_DECRYPT",
				"tags":                               null,
			},
		},
		"module.s3_bucket.aws_s3_bucket.this[0]": {
			"address":        "module.s3_bucket.aws_s3_bucket.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_s3_bucket",
			"values": {
				"force_destroy":       true,
				"object_lock_enabled": false,
				"tags": {
					"Owner":   "Dev",
					"Purpose": "Demo",
				},
				"tags_all": {
					"Owner":   "Dev",
					"Purpose": "Demo",
				},
				"timeouts": null,
			},
		},
		"module.s3_bucket.aws_s3_bucket_acl.this[0]": {
			"address":        "module.s3_bucket.aws_s3_bucket_acl.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_s3_bucket_acl",
			"values": {
				"acl": "private",
				"expected_bucket_owner": null,
			},
		},
		"module.s3_bucket.aws_s3_bucket_public_access_block.this[0]": {
			"address":        "module.s3_bucket.aws_s3_bucket_public_access_block.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_s3_bucket_public_access_block",
			"values": {
				"block_public_acls":       true,
				"block_public_policy":     true,
				"ignore_public_acls":      true,
				"restrict_public_buckets": true,
			},
		},
		"module.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.this[0]": {
			"address":        "module.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_s3_bucket_server_side_encryption_configuration",
			"values": {
				"expected_bucket_owner": null,
			},
		},
		"module.s3_bucket.aws_s3_bucket_versioning.this[0]": {
			"address":        "module.s3_bucket.aws_s3_bucket_versioning.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_s3_bucket_versioning",
			"values": {
				"expected_bucket_owner": null,
				"mfa": null,
				"versioning_configuration": [
					{
						"status": "Enabled",
					},
				],
			},
		},
		"random_pet.random": {
			"address":        "random_pet.random",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "random",
			"provider_name":  "registry.terraform.io/hashicorp/random",
			"tainted":        false,
			"type":           "random_pet",
			"values": {
				"keepers":   null,
				"length":    2,
				"prefix":    null,
				"separator": "-",
			},
		},
	},
}

variables = {}

resource_changes = {
	"aws_kms_key.objects": {
		"address": "aws_kms_key.objects",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"bypass_policy_lockout_safety_check": false,
				"custom_key_store_id":                null,
				"customer_master_key_spec":           "SYMMETRIC_DEFAULT",
				"deletion_window_in_days":            7,
				"description":                        "KMS key is used to encrypt bucket objects",
				"enable_key_rotation":                false,
				"is_enabled":                         true,
				"key_usage":                          "ENCRYPT_DECRYPT",
				"tags":                               null,
			},
			"after_unknown": {
				"arn":          true,
				"id":           true,
				"key_id":       true,
				"multi_region": true,
				"policy":       true,
				"tags_all":     true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "objects",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_kms_key",
	},
	"module.s3_bucket.aws_s3_bucket.this[0]": {
		"address": "module.s3_bucket.aws_s3_bucket.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"force_destroy":       true,
				"object_lock_enabled": false,
				"tags": {
					"Owner":   "Dev",
					"Purpose": "Demo",
				},
				"tags_all": {
					"Owner":   "Dev",
					"Purpose": "Demo",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"acceleration_status": true,
				"acl":                                  true,
				"arn":                                  true,
				"bucket":                               true,
				"bucket_domain_name":                   true,
				"bucket_prefix":                        true,
				"bucket_regional_domain_name":          true,
				"cors_rule":                            true,
				"grant":                                true,
				"hosted_zone_id":                       true,
				"id":                                   true,
				"lifecycle_rule":                       true,
				"logging":                              true,
				"object_lock_configuration":            true,
				"policy":                               true,
				"region":                               true,
				"replication_configuration":            true,
				"request_payer":                        true,
				"server_side_encryption_configuration": true,
				"tags":             {},
				"tags_all":         {},
				"versioning":       true,
				"website":          true,
				"website_domain":   true,
				"website_endpoint": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.s3_bucket",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_s3_bucket",
	},
	"module.s3_bucket.aws_s3_bucket_acl.this[0]": {
		"address": "module.s3_bucket.aws_s3_bucket_acl.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"acl": "private",
				"expected_bucket_owner": null,
			},
			"after_unknown": {
				"access_control_policy": true,
				"bucket":                true,
				"id":                    true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.s3_bucket",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_s3_bucket_acl",
	},
	"module.s3_bucket.aws_s3_bucket_public_access_block.this[0]": {
		"address": "module.s3_bucket.aws_s3_bucket_public_access_block.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"block_public_acls":       true,
				"block_public_policy":     true,
				"ignore_public_acls":      true,
				"restrict_public_buckets": true,
			},
			"after_unknown": {
				"bucket": true,
				"id":     true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.s3_bucket",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_s3_bucket_public_access_block",
	},
	"module.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.this[0]": {
		"address": "module.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"expected_bucket_owner": null,
			},
			"after_unknown": {
				"bucket": true,
				"id":     true,
				"rule":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.s3_bucket",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_s3_bucket_server_side_encryption_configuration",
	},
	"module.s3_bucket.aws_s3_bucket_versioning.this[0]": {
		"address": "module.s3_bucket.aws_s3_bucket_versioning.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"expected_bucket_owner": null,
				"mfa": null,
				"versioning_configuration": [
					{
						"status": "Enabled",
					},
				],
			},
			"after_unknown": {
				"bucket": true,
				"id":     true,
				"versioning_configuration": [
					{
						"mfa_delete": true,
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.s3_bucket",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_s3_bucket_versioning",
	},
	"random_pet.random": {
		"address": "random_pet.random",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"keepers":   null,
				"length":    2,
				"prefix":    null,
				"separator": "-",
			},
			"after_unknown": {
				"id": true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "random",
		"provider_name":  "registry.terraform.io/hashicorp/random",
		"type":           "random_pet",
	},
}

output_changes = {}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"region": {
						"constant_value": "us-east-1",
					},
				},
				"full_name": "registry.terraform.io/hashicorp/aws",
				"name":      "aws",
			},
			"random": {
				"full_name": "registry.terraform.io/hashicorp/random",
				"name":      "random",
			},
		},
		"root_module": {
			"module_calls": {
				"s3_bucket": {
					"expressions": {
						"acl": {
							"constant_value": "private",
						},
						"bucket": {
							"references": [
								"random_pet.random.id",
								"random_pet.random",
							],
						},
						"force_destroy": {
							"constant_value": true,
						},
						"server_side_encryption_configuration": {
							"references": [
								"aws_kms_key.objects.arn",
								"aws_kms_key.objects",
							],
						},
						"tags": {
							"constant_value": {
								"Owner":   "Dev",
								"Purpose": "Demo",
							},
						},
						"versioning": {
							"constant_value": {
								"enabled": true,
							},
						},
					},
					"module": {
						"outputs": {
							"s3_bucket_arn": {
								"description": "The ARN of the bucket. Will be of format arn:aws:s3:::bucketname.",
								"expression": {
									"references": [
										"aws_s3_bucket.this[0].arn",
										"aws_s3_bucket.this[0]",
										"aws_s3_bucket.this",
									],
								},
							},
							"s3_bucket_bucket_domain_name": {
								"description": "The bucket domain name. Will be of format bucketname.s3.amazonaws.com.",
								"expression": {
									"references": [
										"aws_s3_bucket.this[0].bucket_domain_name",
										"aws_s3_bucket.this[0]",
										"aws_s3_bucket.this",
									],
								},
							},
							"s3_bucket_bucket_regional_domain_name": {
								"description": "The bucket region-specific domain name. The bucket domain name including the region name, please refer here for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent redirect issues from CloudFront to S3 Origin URL.",
								"expression": {
									"references": [
										"aws_s3_bucket.this[0].bucket_regional_domain_name",
										"aws_s3_bucket.this[0]",
										"aws_s3_bucket.this",
									],
								},
							},
							"s3_bucket_hosted_zone_id": {
								"description": "The Route 53 Hosted Zone ID for this bucket's region.",
								"expression": {
									"references": [
										"aws_s3_bucket.this[0].hosted_zone_id",
										"aws_s3_bucket.this[0]",
										"aws_s3_bucket.this",
									],
								},
							},
							"s3_bucket_id": {
								"description": "The name of the bucket.",
								"expression": {
									"references": [
										"aws_s3_bucket_policy.this[0].id",
										"aws_s3_bucket_policy.this[0]",
										"aws_s3_bucket_policy.this",
										"aws_s3_bucket.this[0].id",
										"aws_s3_bucket.this[0]",
										"aws_s3_bucket.this",
									],
								},
							},
							"s3_bucket_lifecycle_configuration_rules": {
								"description": "The lifecycle rules of the bucket, if the bucket is configured with lifecycle rules. If not, this will be an empty string.",
								"expression": {
									"references": [
										"aws_s3_bucket_lifecycle_configuration.this[0].rule",
										"aws_s3_bucket_lifecycle_configuration.this[0]",
										"aws_s3_bucket_lifecycle_configuration.this",
									],
								},
							},
							"s3_bucket_policy": {
								"description": "The policy of the bucket, if the bucket is configured with a policy. If not, this will be an empty string.",
								"expression": {
									"references": [
										"aws_s3_bucket_policy.this[0].policy",
										"aws_s3_bucket_policy.this[0]",
										"aws_s3_bucket_policy.this",
									],
								},
							},
							"s3_bucket_region": {
								"description": "The AWS region this bucket resides in.",
								"expression": {
									"references": [
										"aws_s3_bucket.this[0].region",
										"aws_s3_bucket.this[0]",
										"aws_s3_bucket.this",
									],
								},
							},
							"s3_bucket_website_domain": {
								"description": "The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.",
								"expression": {
									"references": [
										"aws_s3_bucket_website_configuration.this[0].website_domain",
										"aws_s3_bucket_website_configuration.this[0]",
										"aws_s3_bucket_website_configuration.this",
									],
								},
							},
							"s3_bucket_website_endpoint": {
								"description": "The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.",
								"expression": {
									"references": [
										"aws_s3_bucket_website_configuration.this[0].website_endpoint",
										"aws_s3_bucket_website_configuration.this[0]",
										"aws_s3_bucket_website_configuration.this",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_s3_bucket.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"var.bucket",
										],
									},
									"bucket_prefix": {
										"references": [
											"var.bucket_prefix",
										],
									},
									"force_destroy": {
										"references": [
											"var.force_destroy",
										],
									},
									"object_lock_enabled": {
										"references": [
											"var.object_lock_enabled",
										],
									},
									"tags": {
										"references": [
											"var.tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket",
							},
							{
								"address": "aws_s3_bucket_accelerate_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.acceleration_status",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
									"status": {
										"references": [
											"var.acceleration_status",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_accelerate_configuration",
							},
							{
								"address": "aws_s3_bucket_acl.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.acl",
										"var.acl",
										"local.grants",
									],
								},
								"depends_on": [
									"aws_s3_bucket_ownership_controls.this",
								],
								"expressions": {
									"acl": {
										"references": [
											"var.acl",
											"var.acl",
										],
									},
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_acl",
							},
							{
								"address": "aws_s3_bucket_analytics_configuration.this",
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"name": {
										"references": [
											"each.key",
										],
									},
								},
								"for_each_expression": {
									"references": [
										"var.analytics_configuration",
										"local.create_bucket",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_analytics_configuration",
							},
							{
								"address": "aws_s3_bucket_cors_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"local.cors_rules",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_cors_configuration",
							},
							{
								"address": "aws_s3_bucket_intelligent_tiering_configuration.this",
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"name": {
										"references": [
											"each.key",
										],
									},
									"status": {
										"references": [
											"each.value.status",
											"each.value",
											"each.value.status",
											"each.value",
										],
									},
								},
								"for_each_expression": {
									"references": [
										"local.intelligent_tiering",
										"local.create_bucket",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_intelligent_tiering_configuration",
							},
							{
								"address": "aws_s3_bucket_inventory.this",
								"expressions": {
									"bucket": {
										"references": [
											"each.value.bucket",
											"each.value",
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"destination": [
										{
											"bucket": [
												{
													"account_id": {
														"references": [
															"each.value.destination.account_id",
															"each.value.destination",
															"each.value",
														],
													},
													"bucket_arn": {
														"references": [
															"each.value.destination.bucket_arn",
															"each.value.destination",
															"each.value",
															"aws_s3_bucket.this[0].arn",
															"aws_s3_bucket.this[0]",
															"aws_s3_bucket.this",
														],
													},
													"format": {
														"references": [
															"each.value.destination.format",
															"each.value.destination",
															"each.value",
														],
													},
													"prefix": {
														"references": [
															"each.value.destination.prefix",
															"each.value.destination",
															"each.value",
														],
													},
												},
											],
										},
									],
									"enabled": {
										"references": [
											"each.value.enabled",
											"each.value",
										],
									},
									"included_object_versions": {
										"references": [
											"each.value.included_object_versions",
											"each.value",
										],
									},
									"name": {
										"references": [
											"each.key",
										],
									},
									"optional_fields": {
										"references": [
											"each.value.optional_fields",
											"each.value",
										],
									},
									"schedule": [
										{
											"frequency": {
												"references": [
													"each.value.frequency",
													"each.value",
												],
											},
										},
									],
								},
								"for_each_expression": {
									"references": [
										"var.inventory_configuration",
										"local.create_bucket",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_inventory",
							},
							{
								"address": "aws_s3_bucket_lifecycle_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"local.lifecycle_rules",
									],
								},
								"depends_on": [
									"aws_s3_bucket_versioning.this",
								],
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_lifecycle_configuration",
							},
							{
								"address": "aws_s3_bucket_logging.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.logging",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"target_bucket": {
										"references": [
											"var.logging[\"target_bucket\"]",
											"var.logging",
										],
									},
									"target_prefix": {
										"references": [
											"var.logging[\"target_prefix\"]",
											"var.logging",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_logging",
							},
							{
								"address": "aws_s3_bucket_metric.this",
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"name": {
										"references": [
											"each.value.name",
											"each.value",
										],
									},
								},
								"for_each_expression": {
									"references": [
										"local.metric_configuration",
										"local.create_bucket",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_metric",
							},
							{
								"address": "aws_s3_bucket_object_lock_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.object_lock_enabled",
										"var.object_lock_configuration.rule.default_retention",
										"var.object_lock_configuration.rule",
										"var.object_lock_configuration",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
									"rule": [
										{
											"default_retention": [
												{
													"days": {
														"references": [
															"var.object_lock_configuration.rule.default_retention.days",
															"var.object_lock_configuration.rule.default_retention",
															"var.object_lock_configuration.rule",
															"var.object_lock_configuration",
														],
													},
													"mode": {
														"references": [
															"var.object_lock_configuration.rule.default_retention.mode",
															"var.object_lock_configuration.rule.default_retention",
															"var.object_lock_configuration.rule",
															"var.object_lock_configuration",
														],
													},
													"years": {
														"references": [
															"var.object_lock_configuration.rule.default_retention.years",
															"var.object_lock_configuration.rule.default_retention",
															"var.object_lock_configuration.rule",
															"var.object_lock_configuration",
														],
													},
												},
											],
										},
									],
									"token": {
										"references": [
											"var.object_lock_configuration.token",
											"var.object_lock_configuration",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_object_lock_configuration",
							},
							{
								"address": "aws_s3_bucket_ownership_controls.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.control_object_ownership",
									],
								},
								"depends_on": [
									"aws_s3_bucket_policy.this",
									"aws_s3_bucket_public_access_block.this",
									"aws_s3_bucket.this",
								],
								"expressions": {
									"bucket": {
										"references": [
											"local.attach_policy",
											"aws_s3_bucket_policy.this[0].id",
											"aws_s3_bucket_policy.this[0]",
											"aws_s3_bucket_policy.this",
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"rule": [
										{
											"object_ownership": {
												"references": [
													"var.object_ownership",
												],
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_ownership_controls",
							},
							{
								"address": "aws_s3_bucket_policy.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"local.attach_policy",
									],
								},
								"depends_on": [
									"aws_s3_bucket_public_access_block.this",
								],
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.combined[0].json",
											"data.aws_iam_policy_document.combined[0]",
											"data.aws_iam_policy_document.combined",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_policy",
							},
							{
								"address": "aws_s3_bucket_public_access_block.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_public_policy",
									],
								},
								"expressions": {
									"block_public_acls": {
										"references": [
											"var.block_public_acls",
										],
									},
									"block_public_policy": {
										"references": [
											"var.block_public_policy",
										],
									},
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"ignore_public_acls": {
										"references": [
											"var.ignore_public_acls",
										],
									},
									"restrict_public_buckets": {
										"references": [
											"var.restrict_public_buckets",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_public_access_block",
							},
							{
								"address": "aws_s3_bucket_replication_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.replication_configuration",
									],
								},
								"depends_on": [
									"aws_s3_bucket_versioning.this",
								],
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"role": {
										"references": [
											"var.replication_configuration[\"role\"]",
											"var.replication_configuration",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_replication_configuration",
							},
							{
								"address": "aws_s3_bucket_request_payment_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.request_payer",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
									"payer": {
										"references": [
											"var.request_payer",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_request_payment_configuration",
							},
							{
								"address": "aws_s3_bucket_server_side_encryption_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.server_side_encryption_configuration",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_server_side_encryption_configuration",
							},
							{
								"address": "aws_s3_bucket_versioning.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.versioning",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
									"mfa": {
										"references": [
											"var.versioning[\"mfa\"]",
											"var.versioning",
										],
									},
									"versioning_configuration": [
										{
											"mfa_delete": {
												"references": [
													"var.versioning[\"mfa_delete\"]",
													"var.versioning",
													"var.versioning[\"mfa_delete\"]",
													"var.versioning",
												],
											},
											"status": {
												"references": [
													"var.versioning[\"enabled\"]",
													"var.versioning",
													"var.versioning[\"status\"]",
													"var.versioning",
													"var.versioning[\"status\"]",
													"var.versioning",
												],
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_versioning",
							},
							{
								"address": "aws_s3_bucket_website_configuration.this",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.website",
									],
								},
								"expressions": {
									"bucket": {
										"references": [
											"aws_s3_bucket.this[0].id",
											"aws_s3_bucket.this[0]",
											"aws_s3_bucket.this",
										],
									},
									"expected_bucket_owner": {
										"references": [
											"var.expected_bucket_owner",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_s3_bucket_website_configuration",
							},
							{
								"address":             "data.aws_caller_identity.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_caller_identity",
							},
							{
								"address":             "data.aws_canonical_user_id.this",
								"mode":                "data",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_canonical_user_id",
							},
							{
								"address": "data.aws_iam_policy_document.access_log_delivery",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_access_log_delivery_policy",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:PutObject",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"logging.s3.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "AWSAccessLogDeliveryWrite",
											},
										},
										{
											"actions": {
												"constant_value": [
													"s3:GetBucketAcl",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"logging.s3.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "AWSAccessLogDeliveryAclCheck",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "access_log_delivery",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.combined",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"local.attach_policy",
									],
								},
								"expressions": {
									"source_policy_documents": {
										"references": [
											"var.attach_elb_log_delivery_policy",
											"data.aws_iam_policy_document.elb_log_delivery[0].json",
											"data.aws_iam_policy_document.elb_log_delivery[0]",
											"data.aws_iam_policy_document.elb_log_delivery",
											"var.attach_lb_log_delivery_policy",
											"data.aws_iam_policy_document.lb_log_delivery[0].json",
											"data.aws_iam_policy_document.lb_log_delivery[0]",
											"data.aws_iam_policy_document.lb_log_delivery",
											"var.attach_access_log_delivery_policy",
											"data.aws_iam_policy_document.access_log_delivery[0].json",
											"data.aws_iam_policy_document.access_log_delivery[0]",
											"data.aws_iam_policy_document.access_log_delivery",
											"var.attach_require_latest_tls_policy",
											"data.aws_iam_policy_document.require_latest_tls[0].json",
											"data.aws_iam_policy_document.require_latest_tls[0]",
											"data.aws_iam_policy_document.require_latest_tls",
											"var.attach_deny_insecure_transport_policy",
											"data.aws_iam_policy_document.deny_insecure_transport[0].json",
											"data.aws_iam_policy_document.deny_insecure_transport[0]",
											"data.aws_iam_policy_document.deny_insecure_transport",
											"var.attach_deny_unencrypted_object_uploads",
											"data.aws_iam_policy_document.deny_unencrypted_object_uploads[0].json",
											"data.aws_iam_policy_document.deny_unencrypted_object_uploads[0]",
											"data.aws_iam_policy_document.deny_unencrypted_object_uploads",
											"var.attach_deny_incorrect_kms_key_sse",
											"data.aws_iam_policy_document.deny_incorrect_kms_key_sse[0].json",
											"data.aws_iam_policy_document.deny_incorrect_kms_key_sse[0]",
											"data.aws_iam_policy_document.deny_incorrect_kms_key_sse",
											"var.attach_deny_incorrect_encryption_headers",
											"data.aws_iam_policy_document.deny_incorrect_encryption_headers[0].json",
											"data.aws_iam_policy_document.deny_incorrect_encryption_headers[0]",
											"data.aws_iam_policy_document.deny_incorrect_encryption_headers",
											"var.attach_inventory_destination_policy",
											"var.attach_analytics_destination_policy",
											"data.aws_iam_policy_document.inventory_and_analytics_destination_policy[0].json",
											"data.aws_iam_policy_document.inventory_and_analytics_destination_policy[0]",
											"data.aws_iam_policy_document.inventory_and_analytics_destination_policy",
											"var.attach_policy",
											"var.policy",
										],
									},
								},
								"mode":                "data",
								"name":                "combined",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.deny_incorrect_encryption_headers",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_deny_incorrect_encryption_headers",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:PutObject",
												],
											},
											"condition": [
												{
													"test": {
														"constant_value": "StringNotEquals",
													},
													"values": {
														"references": [
															"var.server_side_encryption_configuration.rule.apply_server_side_encryption_by_default.sse_algorithm",
															"var.server_side_encryption_configuration.rule.apply_server_side_encryption_by_default",
															"var.server_side_encryption_configuration.rule",
															"var.server_side_encryption_configuration",
														],
													},
													"variable": {
														"constant_value": "s3:x-amz-server-side-encryption",
													},
												},
											],
											"effect": {
												"constant_value": "Deny",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"*",
														],
													},
													"type": {
														"constant_value": "*",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "denyIncorrectEncryptionHeaders",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "deny_incorrect_encryption_headers",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.deny_incorrect_kms_key_sse",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_deny_incorrect_kms_key_sse",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:PutObject",
												],
											},
											"condition": [
												{
													"test": {
														"constant_value": "StringNotEquals",
													},
													"values": {
														"references": [
															"var.allowed_kms_key_arn",
														],
													},
													"variable": {
														"constant_value": "s3:x-amz-server-side-encryption-aws-kms-key-id",
													},
												},
											],
											"effect": {
												"constant_value": "Deny",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"*",
														],
													},
													"type": {
														"constant_value": "*",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "denyIncorrectKmsKeySse",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "deny_incorrect_kms_key_sse",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.deny_insecure_transport",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_deny_insecure_transport_policy",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:*",
												],
											},
											"condition": [
												{
													"test": {
														"constant_value": "Bool",
													},
													"values": {
														"constant_value": [
															"false",
														],
													},
													"variable": {
														"constant_value": "aws:SecureTransport",
													},
												},
											],
											"effect": {
												"constant_value": "Deny",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"*",
														],
													},
													"type": {
														"constant_value": "*",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "denyInsecureTransport",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "deny_insecure_transport",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.deny_unencrypted_object_uploads",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_deny_unencrypted_object_uploads",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:PutObject",
												],
											},
											"condition": [
												{
													"test": {
														"constant_value": "Null",
													},
													"values": {
														"constant_value": [
															true,
														],
													},
													"variable": {
														"constant_value": "s3:x-amz-server-side-encryption",
													},
												},
											],
											"effect": {
												"constant_value": "Deny",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"*",
														],
													},
													"type": {
														"constant_value": "*",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "denyUnencryptedObjectUploads",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "deny_unencrypted_object_uploads",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.elb_log_delivery",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_elb_log_delivery_policy",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:PutObject",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"logdelivery.elasticloadbalancing.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "elb_log_delivery",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.inventory_and_analytics_destination_policy",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_inventory_destination_policy",
										"var.attach_analytics_destination_policy",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:PutObject",
												],
											},
											"condition": [
												{
													"test": {
														"constant_value": "ArnLike",
													},
													"values": {
														"references": [
															"var.inventory_self_source_destination",
															"aws_s3_bucket.this[0].arn",
															"aws_s3_bucket.this[0]",
															"aws_s3_bucket.this",
															"var.inventory_source_bucket_arn",
															"var.analytics_self_source_destination",
															"aws_s3_bucket.this[0].arn",
															"aws_s3_bucket.this[0]",
															"aws_s3_bucket.this",
															"var.analytics_source_bucket_arn",
														],
													},
													"variable": {
														"constant_value": "aws:SourceArn",
													},
												},
												{
													"test": {
														"constant_value": "StringEquals",
													},
													"values": {
														"references": [
															"var.inventory_self_source_destination",
															"data.aws_caller_identity.current.id",
															"data.aws_caller_identity.current",
															"var.inventory_source_account_id",
															"var.analytics_self_source_destination",
															"data.aws_caller_identity.current.id",
															"data.aws_caller_identity.current",
															"var.analytics_source_account_id",
														],
													},
													"variable": {
														"constant_value": "aws:SourceAccount",
													},
												},
												{
													"test": {
														"constant_value": "StringEquals",
													},
													"values": {
														"constant_value": [
															"bucket-owner-full-control",
														],
													},
													"variable": {
														"constant_value": "s3:x-amz-acl",
													},
												},
											],
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"s3.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "destinationInventoryAndAnalyticsPolicy",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "inventory_and_analytics_destination_policy",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.lb_log_delivery",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_lb_log_delivery_policy",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:PutObject",
												],
											},
											"condition": [
												{
													"test": {
														"constant_value": "StringEquals",
													},
													"values": {
														"constant_value": [
															"bucket-owner-full-control",
														],
													},
													"variable": {
														"constant_value": "s3:x-amz-acl",
													},
												},
											],
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"delivery.logs.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "AWSLogDeliveryWrite",
											},
										},
										{
											"actions": {
												"constant_value": [
													"s3:GetBucketAcl",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"delivery.logs.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "AWSLogDeliveryAclCheck",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "lb_log_delivery",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.require_latest_tls",
								"count_expression": {
									"references": [
										"local.create_bucket",
										"var.attach_require_latest_tls_policy",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"s3:*",
												],
											},
											"condition": [
												{
													"test": {
														"constant_value": "NumericLessThan",
													},
													"values": {
														"constant_value": [
															"1.2",
														],
													},
													"variable": {
														"constant_value": "s3:TlsVersion",
													},
												},
											],
											"effect": {
												"constant_value": "Deny",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"*",
														],
													},
													"type": {
														"constant_value": "*",
													},
												},
											],
											"resources": {
												"references": [
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
													"aws_s3_bucket.this[0].arn",
													"aws_s3_bucket.this[0]",
													"aws_s3_bucket.this",
												],
											},
											"sid": {
												"constant_value": "denyOutdatedTLS",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "require_latest_tls",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address":             "data.aws_partition.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_partition",
							},
							{
								"address":             "data.aws_region.current",
								"mode":                "data",
								"name":                "current",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_region",
							},
						],
						"variables": {
							"acceleration_status": {
								"description": "(Optional) Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended.",
							},
							"access_log_delivery_policy_source_accounts": {
								"default":     [],
								"description": "(Optional) List of AWS Account IDs should be allowed to deliver access logs to this bucket.",
							},
							"access_log_delivery_policy_source_buckets": {
								"default":     [],
								"description": "(Optional) List of S3 bucket ARNs wich should be allowed to deliver access logs to this bucket.",
							},
							"acl": {
								"description": "(Optional) The canned ACL to apply. Conflicts with `grant`",
							},
							"allowed_kms_key_arn": {
								"description": "The ARN of KMS key which should be allowed in PutObject",
							},
							"analytics_configuration": {
								"default":     {},
								"description": "Map containing bucket analytics configuration.",
							},
							"analytics_self_source_destination": {
								"default":     false,
								"description": "Whether or not the analytics source bucket is also the destination bucket.",
							},
							"analytics_source_account_id": {
								"description": "The analytics source account id.",
							},
							"analytics_source_bucket_arn": {
								"description": "The analytics source bucket ARN.",
							},
							"attach_access_log_delivery_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should have S3 access log delivery policy attached",
							},
							"attach_analytics_destination_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should have bucket analytics destination policy attached.",
							},
							"attach_deny_incorrect_encryption_headers": {
								"default":     false,
								"description": "Controls if S3 bucket should deny incorrect encryption headers policy attached.",
							},
							"attach_deny_incorrect_kms_key_sse": {
								"default":     false,
								"description": "Controls if S3 bucket policy should deny usage of incorrect KMS key SSE.",
							},
							"attach_deny_insecure_transport_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should have deny non-SSL transport policy attached",
							},
							"attach_deny_unencrypted_object_uploads": {
								"default":     false,
								"description": "Controls if S3 bucket should deny unencrypted object uploads policy attached.",
							},
							"attach_elb_log_delivery_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should have ELB log delivery policy attached",
							},
							"attach_inventory_destination_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should have bucket inventory destination policy attached.",
							},
							"attach_lb_log_delivery_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should have ALB/NLB log delivery policy attached",
							},
							"attach_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should have bucket policy attached (set to `true` to use value of `policy` as bucket policy)",
							},
							"attach_public_policy": {
								"default":     true,
								"description": "Controls if a user defined public bucket policy will be attached (set to `false` to allow upstream to apply defaults to the bucket)",
							},
							"attach_require_latest_tls_policy": {
								"default":     false,
								"description": "Controls if S3 bucket should require the latest version of TLS",
							},
							"block_public_acls": {
								"default":     true,
								"description": "Whether Amazon S3 should block public ACLs for this bucket.",
							},
							"block_public_policy": {
								"default":     true,
								"description": "Whether Amazon S3 should block public bucket policies for this bucket.",
							},
							"bucket": {
								"description": "(Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name.",
							},
							"bucket_prefix": {
								"description": "(Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket.",
							},
							"control_object_ownership": {
								"default":     false,
								"description": "Whether to manage S3 Bucket Ownership Controls on this bucket.",
							},
							"cors_rule": {
								"default":     [],
								"description": "List of maps containing rules for Cross-Origin Resource Sharing.",
							},
							"create_bucket": {
								"default":     true,
								"description": "Controls if S3 bucket should be created",
							},
							"expected_bucket_owner": {
								"description": "The account ID of the expected bucket owner",
							},
							"force_destroy": {
								"default":     false,
								"description": "(Optional, Default:false ) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.",
							},
							"grant": {
								"default":     [],
								"description": "An ACL policy grant. Conflicts with `acl`",
							},
							"ignore_public_acls": {
								"default":     true,
								"description": "Whether Amazon S3 should ignore public ACLs for this bucket.",
							},
							"intelligent_tiering": {
								"default":     {},
								"description": "Map containing intelligent tiering configuration.",
							},
							"inventory_configuration": {
								"default":     {},
								"description": "Map containing S3 inventory configuration.",
							},
							"inventory_self_source_destination": {
								"default":     false,
								"description": "Whether or not the inventory source bucket is also the destination bucket.",
							},
							"inventory_source_account_id": {
								"description": "The inventory source account id.",
							},
							"inventory_source_bucket_arn": {
								"description": "The inventory source bucket ARN.",
							},
							"lifecycle_rule": {
								"default":     [],
								"description": "List of maps containing configuration of object lifecycle management.",
							},
							"logging": {
								"default":     {},
								"description": "Map containing access bucket logging configuration.",
							},
							"metric_configuration": {
								"default":     [],
								"description": "Map containing bucket metric configuration.",
							},
							"object_lock_configuration": {
								"default":     {},
								"description": "Map containing S3 object locking configuration.",
							},
							"object_lock_enabled": {
								"default":     false,
								"description": "Whether S3 bucket should have an Object Lock configuration enabled.",
							},
							"object_ownership": {
								"default":     "BucketOwnerEnforced",
								"description": "Object ownership. Valid values: BucketOwnerEnforced, BucketOwnerPreferred or ObjectWriter. 'BucketOwnerEnforced': ACLs are disabled, and the bucket owner automatically owns and has full control over every object in the bucket. 'BucketOwnerPreferred': Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL. 'ObjectWriter': The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL.",
							},
							"owner": {
								"default":     {},
								"description": "Bucket owner's display name and ID. Conflicts with `acl`",
							},
							"policy": {
								"description": "(Optional) A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
							},
							"putin_khuylo": {
								"default":     true,
								"description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
							},
							"replication_configuration": {
								"default":     {},
								"description": "Map containing cross-region replication configuration.",
							},
							"request_payer": {
								"description": "(Optional) Specifies who should bear the cost of Amazon S3 data transfer. Can be either BucketOwner or Requester. By default, the owner of the S3 bucket would incur the costs of any data transfer. See Requester Pays Buckets developer guide for more information.",
							},
							"restrict_public_buckets": {
								"default":     true,
								"description": "Whether Amazon S3 should restrict public bucket policies for this bucket.",
							},
							"server_side_encryption_configuration": {
								"default":     {},
								"description": "Map containing server-side encryption configuration.",
							},
							"tags": {
								"default":     {},
								"description": "(Optional) A mapping of tags to assign to the bucket.",
							},
							"versioning": {
								"default":     {},
								"description": "Map containing versioning configuration.",
							},
							"website": {
								"default":     {},
								"description": "Map containing static web-site hosting or redirect configuration.",
							},
						},
					},
					"source": "terraform-aws-modules/s3-bucket/aws",
				},
			},
			"resources": [
				{
					"address": "aws_kms_key.objects",
					"expressions": {
						"deletion_window_in_days": {
							"constant_value": 7,
						},
						"description": {
							"constant_value": "KMS key is used to encrypt bucket objects",
						},
					},
					"mode":                "managed",
					"name":                "objects",
					"provider_config_key": "aws",
					"schema_version":      0,
					"type":                "aws_kms_key",
				},
				{
					"address":             "random_pet.random",
					"mode":                "managed",
					"name":                "random",
					"provider_config_key": "random",
					"schema_version":      0,
					"type":                "random_pet",
				},
			],
		},
	},
	"format_version": "1.2",
	"planned_values": {
		"root_module": {
			"child_modules": [
				{
					"address": "module.s3_bucket",
					"resources": [
						{
							"address":        "module.s3_bucket.aws_s3_bucket.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"cors_rule":                            [],
								"grant":                                [],
								"lifecycle_rule":                       [],
								"logging":                              [],
								"object_lock_configuration":            [],
								"replication_configuration":            [],
								"server_side_encryption_configuration": [],
								"tags":       {},
								"tags_all":   {},
								"versioning": [],
								"website":    [],
							},
							"type": "aws_s3_bucket",
							"values": {
								"force_destroy":       true,
								"object_lock_enabled": false,
								"tags": {
									"Owner":   "Dev",
									"Purpose": "Demo",
								},
								"tags_all": {
									"Owner":   "Dev",
									"Purpose": "Demo",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.s3_bucket.aws_s3_bucket_acl.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"access_control_policy": [],
							},
							"type": "aws_s3_bucket_acl",
							"values": {
								"acl": "private",
								"expected_bucket_owner": null,
							},
						},
						{
							"address":          "module.s3_bucket.aws_s3_bucket_public_access_block.this[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "this",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_s3_bucket_public_access_block",
							"values": {
								"block_public_acls":       true,
								"block_public_policy":     true,
								"ignore_public_acls":      true,
								"restrict_public_buckets": true,
							},
						},
						{
							"address":        "module.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"rule": [],
							},
							"type": "aws_s3_bucket_server_side_encryption_configuration",
							"values": {
								"expected_bucket_owner": null,
							},
						},
						{
							"address":        "module.s3_bucket.aws_s3_bucket_versioning.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"versioning_configuration": [
									{},
								],
							},
							"type": "aws_s3_bucket_versioning",
							"values": {
								"expected_bucket_owner": null,
								"mfa": null,
								"versioning_configuration": [
									{
										"status": "Enabled",
									},
								],
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "aws_kms_key.objects",
					"mode":           "managed",
					"name":           "objects",
					"provider_name":  "registry.terraform.io/hashicorp/aws",
					"schema_version": 0,
					"sensitive_values": {
						"tags_all": {},
					},
					"type": "aws_kms_key",
					"values": {
						"bypass_policy_lockout_safety_check": false,
						"custom_key_store_id":                null,
						"customer_master_key_spec":           "SYMMETRIC_DEFAULT",
						"deletion_window_in_days":            7,
						"description":                        "KMS key is used to encrypt bucket objects",
						"enable_key_rotation":                false,
						"is_enabled":                         true,
						"key_usage":                          "ENCRYPT_DECRYPT",
						"tags":                               null,
					},
				},
				{
					"address":          "random_pet.random",
					"mode":             "managed",
					"name":             "random",
					"provider_name":    "registry.terraform.io/hashicorp/random",
					"schema_version":   0,
					"sensitive_values": {},
					"type":             "random_pet",
					"values": {
						"keepers":   null,
						"length":    2,
						"prefix":    null,
						"separator": "-",
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "1.0",
		"terraform_version": "1.5.2",
		"values": {
			"root_module": {
				"child_modules": [
					{
						"address": "module.s3_bucket",
						"resources": [
							{
								"address":          "module.s3_bucket.data.aws_caller_identity.current",
								"mode":             "data",
								"name":             "current",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_caller_identity",
								"values": {
									"account_id": "940345621114",
									"arn":        "arn:aws:sts::940345621114:assumed-role/hcp-vault-role-tf-demo/terraform-run-vUrNomCZbBttoNfo",
									"id":         "940345621114",
									"user_id":    "AROA5V4HXPJ5ODLRTNQ7I:terraform-run-vUrNomCZbBttoNfo",
								},
							},
							{
								"address":          "module.s3_bucket.data.aws_canonical_user_id.this",
								"mode":             "data",
								"name":             "this",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_canonical_user_id",
								"values": {
									"display_name": "wallacepf",
									"id":           "5223f1c6196dbdfa2597f44916086ce854e80fbc298d0d41226725805135720a",
								},
							},
							{
								"address":          "module.s3_bucket.data.aws_partition.current",
								"mode":             "data",
								"name":             "current",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_partition",
								"values": {
									"dns_suffix":         "amazonaws.com",
									"id":                 "aws",
									"partition":          "aws",
									"reverse_dns_prefix": "com.amazonaws",
								},
							},
							{
								"address":          "module.s3_bucket.data.aws_region.current",
								"mode":             "data",
								"name":             "current",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_region",
								"values": {
									"description": "US East (N. Virginia)",
									"endpoint":    "ec2.us-east-1.amazonaws.com",
									"id":          "us-east-1",
									"name":        "us-east-1",
								},
							},
						],
					},
				],
			},
		},
	},
	"relevant_attributes": [
		{
			"attribute": [
				"region",
			],
			"resource": "module.s3_bucket.aws_s3_bucket.this[0]",
		},
		{
			"attribute": [
				"json",
			],
			"resource": "module.s3_bucket.data.aws_iam_policy_document.combined[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.s3_bucket.aws_s3_bucket.this[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.s3_bucket.aws_s3_bucket.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "random_pet.random",
		},
		{
			"attribute": [
				"hosted_zone_id",
			],
			"resource": "module.s3_bucket.aws_s3_bucket.this[0]",
		},
		{
			"attribute": [
				"bucket_regional_domain_name",
			],
			"resource": "module.s3_bucket.aws_s3_bucket.this[0]",
		},
		{
			"attribute": [
				"website_endpoint",
			],
			"resource": "module.s3_bucket.aws_s3_bucket_website_configuration.this[0]",
		},
		{
			"attribute": [
				"rule",
			],
			"resource": "module.s3_bucket.aws_s3_bucket_lifecycle_configuration.this[0]",
		},
		{
			"attribute": [
				"policy",
			],
			"resource": "module.s3_bucket.aws_s3_bucket_policy.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.s3_bucket.aws_s3_bucket_policy.this[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "aws_kms_key.objects",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.s3_bucket.data.aws_canonical_user_id.this",
		},
		{
			"attribute": [
				"bucket_domain_name",
			],
			"resource": "module.s3_bucket.aws_s3_bucket.this[0]",
		},
		{
			"attribute": [
				"website_domain",
			],
			"resource": "module.s3_bucket.aws_s3_bucket_website_configuration.this[0]",
		},
	],
	"resource_changes": [
		{
			"address": "aws_kms_key.objects",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"bypass_policy_lockout_safety_check": false,
					"custom_key_store_id":                null,
					"customer_master_key_spec":           "SYMMETRIC_DEFAULT",
					"deletion_window_in_days":            7,
					"description":                        "KMS key is used to encrypt bucket objects",
					"enable_key_rotation":                false,
					"is_enabled":                         true,
					"key_usage":                          "ENCRYPT_DECRYPT",
					"tags":                               null,
				},
				"after_sensitive": {
					"tags_all": {},
				},
				"after_unknown": {
					"arn":          true,
					"id":           true,
					"key_id":       true,
					"multi_region": true,
					"policy":       true,
					"tags_all":     true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "objects",
			"provider_name": "registry.terraform.io/hashicorp/aws",
			"type":          "aws_kms_key",
		},
		{
			"address": "random_pet.random",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"keepers":   null,
					"length":    2,
					"prefix":    null,
					"separator": "-",
				},
				"after_sensitive": {},
				"after_unknown": {
					"id": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":          "managed",
			"name":          "random",
			"provider_name": "registry.terraform.io/hashicorp/random",
			"type":          "random_pet",
		},
		{
			"address": "module.s3_bucket.aws_s3_bucket.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"force_destroy":       true,
					"object_lock_enabled": false,
					"tags": {
						"Owner":   "Dev",
						"Purpose": "Demo",
					},
					"tags_all": {
						"Owner":   "Dev",
						"Purpose": "Demo",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"cors_rule":                            [],
					"grant":                                [],
					"lifecycle_rule":                       [],
					"logging":                              [],
					"object_lock_configuration":            [],
					"replication_configuration":            [],
					"server_side_encryption_configuration": [],
					"tags":       {},
					"tags_all":   {},
					"versioning": [],
					"website":    [],
				},
				"after_unknown": {
					"acceleration_status": true,
					"acl":                                  true,
					"arn":                                  true,
					"bucket":                               true,
					"bucket_domain_name":                   true,
					"bucket_prefix":                        true,
					"bucket_regional_domain_name":          true,
					"cors_rule":                            true,
					"grant":                                true,
					"hosted_zone_id":                       true,
					"id":                                   true,
					"lifecycle_rule":                       true,
					"logging":                              true,
					"object_lock_configuration":            true,
					"policy":                               true,
					"region":                               true,
					"replication_configuration":            true,
					"request_payer":                        true,
					"server_side_encryption_configuration": true,
					"tags":             {},
					"tags_all":         {},
					"versioning":       true,
					"website":          true,
					"website_domain":   true,
					"website_endpoint": true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_s3_bucket",
		},
		{
			"address": "module.s3_bucket.aws_s3_bucket_acl.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"acl": "private",
					"expected_bucket_owner": null,
				},
				"after_sensitive": {
					"access_control_policy": [],
				},
				"after_unknown": {
					"access_control_policy": true,
					"bucket":                true,
					"id":                    true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_s3_bucket_acl",
		},
		{
			"address": "module.s3_bucket.aws_s3_bucket_public_access_block.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"block_public_acls":       true,
					"block_public_policy":     true,
					"ignore_public_acls":      true,
					"restrict_public_buckets": true,
				},
				"after_sensitive": {},
				"after_unknown": {
					"bucket": true,
					"id":     true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_s3_bucket_public_access_block",
		},
		{
			"address": "module.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"expected_bucket_owner": null,
				},
				"after_sensitive": {
					"rule": [],
				},
				"after_unknown": {
					"bucket": true,
					"id":     true,
					"rule":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_s3_bucket_server_side_encryption_configuration",
		},
		{
			"address": "module.s3_bucket.aws_s3_bucket_versioning.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"expected_bucket_owner": null,
					"mfa": null,
					"versioning_configuration": [
						{
							"status": "Enabled",
						},
					],
				},
				"after_sensitive": {
					"versioning_configuration": [
						{},
					],
				},
				"after_unknown": {
					"bucket": true,
					"id":     true,
					"versioning_configuration": [
						{
							"mfa_delete": true,
						},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.s3_bucket",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_s3_bucket_versioning",
		},
	],
	"terraform_version": "1.5.2",
}
