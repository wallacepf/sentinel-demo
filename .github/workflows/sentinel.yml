name: sentinel-pipe
on: push
jobs:
  test-sentinel-policy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Sentinel
        working-directory: ./policies
        run: |
          curl https://releases.hashicorp.com/sentinel/0.18.4/sentinel_0.18.4_linux_amd64.zip --output sentinel.zip
          unzip sentinel.zip
      - name: Sentinel Version
        working-directory: ./policies
        run: ./sentinel version
      - name: Sentinel Format
        working-directory: ./policies
        run: ./sentinel fmt */*.sentinel
      - name: Run Sentinel Policy Tests
        working-directory: ./policies
        run: ./sentinel test */
  create-policy-set:
    defaults:
      run:
        working-directory: ./tf/tfc-config
    needs: test-sentinel-policy
    runs-on: ubuntu-latest
    env:
      TF_VAR_token: ${{ secrets.TF_API_TOKEN }}
      TF_VAR_vcs_oauth_key: ${{ secrets.VCS_OAUTH_KEY }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
      TF_VAR_aws_secret_id: ${{ secrets.AWS_SECRET_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup TF
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform
          cat <<EOF > .terraformrc
          credentials "app.terraform.io" {
              token = "${{ secrets.TF_API_TOKEN }}"   
          }
          EOF
          cp .terraformrc ~/
      - name: Terraform Format
        run: terraform fmt -check
      - name: Terraform Init Prod
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TF_VAR_branch: main
          TF_WORKSPACE: tfc-config-prod       
        run: terraform init
      - name: Terraform Init Dev
        if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
        env:
          TF_VAR_branch: main
          TF_WORKSPACE: tfc-config-dev      
        run: terraform init
      - name: Terraform Validate
        run: terraform validate -no-color
      - name: Terraform Plan Prod
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TF_VAR_branch: main
          TF_WORKSPACE: tfc-config-prod       
        run: terraform plan -no-color
      - name: Terraform Plan Dev
        if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
        env:
          TF_VAR_branch: dev
          TF_WORKSPACE: tfc-config-dev    
        run: terraform plan -no-color
      - name: Terraform apply Prod
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          TF_VAR_branch: main
          TF_WORKSPACE: tfc-config-prod
        run: terraform apply -auto-approve 
      - name: Terraform Apply Dev
        if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
        env:
          TF_VAR_branch: dev
          TF_WORKSPACE: tfc-config-dev
        run: terraform apply -auto-approve 









